// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottoAdver.Infastructure.DbContexts;

#nullable disable

namespace MottoAdver.Infastructure.Migrations
{
    [DbContext(typeof(MottoAdverContext))]
    [Migration("20230324041036_helperMigration")]
    partial class helperMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottoAdver.Domain.Addresses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("country")
                        .HasColumnOrder(2);

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("district")
                        .HasColumnOrder(4);

                    b.Property<int>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("postalCode")
                        .HasColumnOrder(6);

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("region")
                        .HasColumnOrder(3);

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("street")
                        .HasColumnOrder(5);

                    b.HasKey("Id")
                        .HasName("address_pr");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("MottoAdver.Domain.Addvertisements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("addressId")
                        .HasColumnOrder(6);

                    b.Property<string>("AddvertiserFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("addvertiserFullName")
                        .HasColumnOrder(2);

                    b.Property<long>("AddvertiserTelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("addvertiserTelegramId")
                        .HasColumnOrder(3);

                    b.Property<string>("AddvertiserTellNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("addvertiserTellNumber")
                        .HasColumnOrder(4);

                    b.Property<Guid>("MotoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("motoId")
                        .HasColumnOrder(7);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal")
                        .HasColumnName("motoPrice")
                        .HasColumnOrder(5);

                    b.HasKey("Id")
                        .HasName("addver_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("MotoId")
                        .IsUnique();

                    b.ToTable("Addvertisements", (string)null);
                });

            modelBuilder.Entity("MottoAdver.Domain.Admins", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("email")
                        .HasColumnOrder(3);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fullName")
                        .HasColumnOrder(2);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("passwordHash")
                        .HasColumnOrder(4);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("passwordSalt")
                        .HasColumnOrder(5);

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("refreshToken")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("refreshTokenExpireDate")
                        .HasColumnOrder(9);

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("telegramId")
                        .HasColumnOrder(7);

                    b.Property<string>("TellNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tellNumber")
                        .HasColumnOrder(6);

                    b.HasKey("Id")
                        .HasName("admin_prKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasAlternateKey("Email")
                        .HasName("Email");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("Email"), false);

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ff8f011-3617-4088-b7d4-fe8c54ca5515"),
                            Email = "admin@gmail.com",
                            FullName = "admin",
                            PasswordHash = "admin",
                            PasswordSalt = "admin",
                            TelegramId = 1001896758986L,
                            TellNumber = "931239658"
                        });
                });

            modelBuilder.Entity("MottoAdver.Domain.Motos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("Charge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("charge")
                        .HasColumnOrder(3);

                    b.Property<string>("DistanceFullCharge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("distanceFullCharge")
                        .HasColumnOrder(4);

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("int")
                        .HasColumnName("maxSpeed")
                        .HasColumnOrder(6);

                    b.Property<long>("MaxWeight")
                        .HasColumnType("bigint")
                        .HasColumnName("maxWeight")
                        .HasColumnOrder(5);

                    b.Property<string>("MotoName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("motoName")
                        .HasColumnOrder(2);

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("makingYear")
                        .HasColumnOrder(7);

                    b.HasKey("Id")
                        .HasName("moto_pk");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Motos", (string)null);
                });

            modelBuilder.Entity("MottoAdver.Domain.Addvertisements", b =>
                {
                    b.HasOne("MottoAdver.Domain.Addresses", "Address")
                        .WithOne()
                        .HasForeignKey("MottoAdver.Domain.Addvertisements", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottoAdver.Domain.Motos", "Moto")
                        .WithOne()
                        .HasForeignKey("MottoAdver.Domain.Addvertisements", "MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Moto");
                });
#pragma warning restore 612, 618
        }
    }
}
